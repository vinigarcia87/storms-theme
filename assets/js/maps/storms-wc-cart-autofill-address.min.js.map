{"version":3,"sources":["storms-wc-cart-autofill-address.min.js"],"names":["jQuery","$","StormsWCCartCorreiosAutofillAddress","init","this","autofill","document","body","on","block","addClass","message","overlayCSS","background","opacity","unblock","removeClass","field","length","cep","val","replace","country","override","StormsWCCartCorreiosAutofillAddressParams","force","address_1","ajax","type","url","dataType","contentType","success","address","fillFields","data","click","city","change","attr","state","trigger"],"mappings":"AAAA,aASAA,OAAO,SAAUC,GAMf,IAAIC,EAAsC,CAIxCC,KAAM,WAEJC,KAAKC,SAAS,iBAAiB,GAC/BJ,EAAEK,SAASC,MAAMC,GAAG,OAAQ,0BAA2B,WACrDN,EAAoCG,SAAS,oBAOjDI,MAAO,WACLR,EAAE,wCAAwCS,SAAS,cAAcD,MAAM,CACrEE,QAAS,KACTC,WAAY,CACVC,WAAY,OACZC,QAAS,OAQfC,QAAS,WACPd,EAAE,wCAAwCe,YAAY,cAAcD,WAStEV,SAAU,SAAkBY,GAG1B,GAAIhB,EAAE,IAAMgB,EAAQ,aAAaC,OAAQ,CAEvC,IAAIC,EAAMlB,EAAE,IAAMgB,EAAQ,aAAaG,MAAMC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IACvEC,EAAUrB,EAAE,IAAMgB,EAAQ,YAAYG,MAE1CG,EAAW,QAAUC,0CAA0CC,OAAe,IAAMC,UAAUR,OAElF,KAARC,GAAc,IAAMA,EAAID,QAAU,OAASI,GAAWC,IACxDrB,EAAoCO,QAEpCR,EAAE0B,KAAK,CACLC,KAAM,MACNC,IAAKL,0CAA0CK,IAAM,aAAeV,EACpEW,SAAU,OACVC,YAAa,mBACbC,QAAS,SAAiBC,GACpBA,EAAQD,UACV9B,EAAoCgC,WAAWjB,EAAOgB,EAAQE,MAE9DlC,EAAE,SAAU,+BAA+BmC,SAO7ClC,EAAoCa,gBAa9CmB,WAAY,SAAoBjB,EAAOkB,GAUrClC,EAAE,IAAMgB,EAAQ,SAASG,IAAIe,EAAKE,MAAMC,SAExCrC,EAAE,IAAMgB,EAAQ,0BAA0BsB,KAAK,YAAY,GAAOD,SAClErC,EAAE,IAAMgB,EAAQ,wBAA0BkB,EAAKK,MAAQ,MAAMD,KAAK,WAAY,YAAYD,SAC1FrC,EAAE,IAAMgB,EAAQ,UAAUwB,QAAQ,iBAAiBA,QAAQ,oBAG/DvC,EAAoCC","file":"../storms-wc-cart-autofill-address.min.js","sourcesContent":["\"use strict\";\n\n/* global StormsWCCartCorreiosAutofillAddressParams */\n\n/*!\r\n * Autofill address with postcodes on cart page.\r\n *\r\n * Version: 3.0.0\r\n */\njQuery(function ($) {\n  /**\r\n   * Autofill address class.\r\n   *\r\n   * @type {Object}\r\n   */\n  var StormsWCCartCorreiosAutofillAddress = {\n    /**\r\n     * Initialize actions.\r\n     */\n    init: function init() {\n      // Initial load.\n      this.autofill('calc_shipping', true);\n      $(document.body).on('blur', '#calc_shipping_postcode', function () {\n        StormsWCCartCorreiosAutofillAddress.autofill('calc_shipping');\n      });\n    },\n\n    /**\r\n     * Block checkout.\r\n     */\n    block: function block() {\n      $('form.woocommerce-shipping-calculator').addClass('processing').block({\n        message: null,\n        overlayCSS: {\n          background: '#fff',\n          opacity: 0.6\n        }\n      });\n    },\n\n    /**\r\n     * Unblock checkout.\r\n     */\n    unblock: function unblock() {\n      $('form.woocommerce-shipping-calculator').removeClass('processing').unblock();\n    },\n\n    /**\r\n     * Autocomplate address.\r\n     *\r\n     * @param {String} field Target.\r\n     * @param {Boolean} copy\r\n     */\n    autofill: function autofill(field, copy) {\n      copy = copy || false; // Checks with *_postcode field exist.\n\n      if ($('#' + field + '_postcode').length) {\n        // Valid CEP.\n        var cep = $('#' + field + '_postcode').val().replace('.', '').replace('-', ''),\n            country = $('#' + field + '_country').val(),\n            //address_1 = $( '#' + field + '_address_1' ).val(),\n        override = 'yes' === StormsWCCartCorreiosAutofillAddressParams.force ? true : 0 === address_1.length; // Check country is BR.\n\n        if (cep !== '' && 8 === cep.length && 'BR' === country && override) {\n          StormsWCCartCorreiosAutofillAddress.block(); // Gets the address.\n\n          $.ajax({\n            type: 'GET',\n            url: StormsWCCartCorreiosAutofillAddressParams.url + '&postcode=' + cep,\n            dataType: 'json',\n            contentType: 'application/json',\n            success: function success(address) {\n              if (address.success) {\n                StormsWCCartCorreiosAutofillAddress.fillFields(field, address.data); // Clickamos no botao Atualizar automaticamente\n\n                $('button', '.shipping-calculator-action').click(); // if ( copy ) {\n                // \tvar newField = 'billing' === field ? 'shipping' : 'billing';\n                //\n                // \tStormsWCCartCorreiosAutofillAddress.fillFields( newField, address.data );\n                // }\n              }\n\n              StormsWCCartCorreiosAutofillAddress.unblock();\n            }\n          });\n        }\n      }\n    },\n\n    /**\r\n     * Fill fields.\r\n     *\r\n     * @param {String} field\r\n     * @param {Object} data\r\n     */\n    fillFields: function fillFields(field, data) {\n      // Address.\n      // $( '#' + field + '_address_1' ).val( data.address ).change();\n      // Neighborhood.\n      // if ( $( '#' + field + '_neighborhood' ).length ) {\n      // \t$( '#' + field + '_neighborhood' ).val( data.neighborhood ).change();\n      // } else {\n      // \t$( '#' + field + '_address_2' ).val( data.neighborhood ).change();\n      // }\n      // City.\n      $('#' + field + '_city').val(data.city).change(); // State.\n\n      $('#' + field + '_state option:selected').attr('selected', false).change();\n      $('#' + field + '_state option[value=\"' + data.state + '\"]').attr('selected', 'selected').change();\n      $('#' + field + '_state').trigger('liszt:updated').trigger('chosen:updated'); // Chosen support.\n    }\n  };\n  StormsWCCartCorreiosAutofillAddress.init();\n});"]}