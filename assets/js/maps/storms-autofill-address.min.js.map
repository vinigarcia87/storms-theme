{"version":3,"sources":["storms-autofill-address.min.js"],"names":["jQuery","$","WCCorreiosAutofillAddress","init","this","autofill","document","body","on","block","addClass","message","overlayCSS","background","opacity","unblock","removeClass","field","copy","length","cep","val","replace","country","address_1","override","WCCorreiosAutofillAddressParams","force","ajax","type","url","dataType","contentType","success","address","fillFields","data","newField","change","neighborhood","city","attr","state","trigger"],"mappings":"AAAA,aAWAA,OAAO,SAAUC,GAMf,IAAIC,EAA4B,CAI9BC,KAAM,WAEJC,KAAKC,SAAS,WAAW,GACzBJ,EAAEK,SAASC,MAAMC,GAAG,OAAQ,oBAAqB,WAC/CN,EAA0BG,SAAS,aAErCJ,EAAEK,SAASC,MAAMC,GAAG,OAAQ,qBAAsB,WAChDN,EAA0BG,SAAS,eAOvCI,MAAO,WACLR,EAAE,oCAAoCS,SAAS,cAAcD,MAAM,CACjEE,QAAS,KACTC,WAAY,CACVC,WAAY,OACZC,QAAS,OAQfC,QAAS,WACPd,EAAE,oCAAoCe,YAAY,cAAcD,WASlEV,SAAU,SAAkBY,EAAOC,GAGjC,GAFAA,EAAOA,IAAQ,EAEXjB,EAAE,IAAMgB,EAAQ,aAAaE,OAAQ,CAEvC,IAAIC,EAAMnB,EAAE,IAAMgB,EAAQ,aAAaI,MAAMC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IACvEC,EAAUtB,EAAE,IAAMgB,EAAQ,YAAYI,MACtCG,EAAYvB,EAAE,IAAMgB,EAAQ,cAAcI,MAC1CI,EAAW,QAAUC,gCAAgCC,OAAe,IAAMH,EAAUL,OAE5E,KAARC,GAAc,IAAMA,EAAID,QAAU,OAASI,GAAWE,IACxDvB,EAA0BO,QAE1BR,EAAE2B,KAAK,CACLC,KAAM,MACNC,IAAKJ,gCAAgCI,IAAM,aAAeV,EAC1DW,SAAU,OACVC,YAAa,mBACbC,QAAS,SAAiBC,GACxB,GAAIA,EAAQD,UACV/B,EAA0BiC,WAAWlB,EAAOiB,EAAQE,MAEhDlB,GAAM,CACR,IAAImB,EAAW,YAAcpB,EAAQ,WAAa,UAClDf,EAA0BiC,WAAWE,EAAUH,EAAQE,MAI3DlC,EAA0Ba,gBAapCoB,WAAY,SAAoBlB,EAAOmB,GAErCnC,EAAE,IAAMgB,EAAQ,cAAcI,IAAIe,EAAKF,SAASI,SAE5CrC,EAAE,IAAMgB,EAAQ,iBAAiBE,OACnClB,EAAE,IAAMgB,EAAQ,iBAAiBI,IAAIe,EAAKG,cAAcD,SAExDrC,EAAE,IAAMgB,EAAQ,cAAcI,IAAIe,EAAKG,cAAcD,SAIvDrC,EAAE,IAAMgB,EAAQ,SAASI,IAAIe,EAAKI,MAAMF,SAExCrC,EAAE,IAAMgB,EAAQ,0BAA0BwB,KAAK,YAAY,GAAOH,SAClErC,EAAE,IAAMgB,EAAQ,wBAA0BmB,EAAKM,MAAQ,MAAMD,KAAK,WAAY,YAAYH,SAC1FrC,EAAE,IAAMgB,EAAQ,UAAU0B,QAAQ,iBAAiBA,QAAQ,kBAG3D1C,EAAE,IAAMgB,EAAQ,UAAUI,IAAIe,EAAKM,OAAOC,QAAQ,YAGtDzC,EAA0BC","file":"../storms-autofill-address.min.js","sourcesContent":["\"use strict\";\n\n/* global WCCorreiosAutofillAddressParams */\n\n/*!\r\n * WooCommerce Correios Autofill Brazilian 2016.\r\n *\r\n * Autofill address with postcodes.\r\n *\r\n * Version: 3.0.0\r\n */\njQuery(function ($) {\n  /**\r\n   * Autofill address class.\r\n   *\r\n   * @type {Object}\r\n   */\n  var WCCorreiosAutofillAddress = {\n    /**\r\n     * Initialize actions.\r\n     */\n    init: function init() {\n      // Initial load.\n      this.autofill('billing', true);\n      $(document.body).on('blur', '#billing_postcode', function () {\n        WCCorreiosAutofillAddress.autofill('billing');\n      });\n      $(document.body).on('blur', '#shipping_postcode', function () {\n        WCCorreiosAutofillAddress.autofill('shipping');\n      });\n    },\n\n    /**\r\n     * Block checkout.\r\n     */\n    block: function block() {\n      $('form.checkout, form#order_review').addClass('processing').block({\n        message: null,\n        overlayCSS: {\n          background: '#fff',\n          opacity: 0.6\n        }\n      });\n    },\n\n    /**\r\n     * Unblock checkout.\r\n     */\n    unblock: function unblock() {\n      $('form.checkout, form#order_review').removeClass('processing').unblock();\n    },\n\n    /**\r\n     * Autocomplate address.\r\n     *\r\n     * @param {String} field Target.\r\n     * @param {Boolean} copy\r\n     */\n    autofill: function autofill(field, copy) {\n      copy = copy || false; // Checks with *_postcode field exist.\n\n      if ($('#' + field + '_postcode').length) {\n        // Valid CEP.\n        var cep = $('#' + field + '_postcode').val().replace('.', '').replace('-', ''),\n            country = $('#' + field + '_country').val(),\n            address_1 = $('#' + field + '_address_1').val(),\n            override = 'yes' === WCCorreiosAutofillAddressParams.force ? true : 0 === address_1.length; // Check country is BR.\n\n        if (cep !== '' && 8 === cep.length && 'BR' === country && override) {\n          WCCorreiosAutofillAddress.block(); // Gets the address.\n\n          $.ajax({\n            type: 'GET',\n            url: WCCorreiosAutofillAddressParams.url + '&postcode=' + cep,\n            dataType: 'json',\n            contentType: 'application/json',\n            success: function success(address) {\n              if (address.success) {\n                WCCorreiosAutofillAddress.fillFields(field, address.data);\n\n                if (copy) {\n                  var newField = 'billing' === field ? 'shipping' : 'billing';\n                  WCCorreiosAutofillAddress.fillFields(newField, address.data);\n                }\n              }\n\n              WCCorreiosAutofillAddress.unblock();\n            }\n          });\n        }\n      }\n    },\n\n    /**\r\n     * Fill fields.\r\n     *\r\n     * @param {String} field\r\n     * @param {Object} data\r\n     */\n    fillFields: function fillFields(field, data) {\n      // Address.\n      $('#' + field + '_address_1').val(data.address).change(); // Neighborhood.\n\n      if ($('#' + field + '_neighborhood').length) {\n        $('#' + field + '_neighborhood').val(data.neighborhood).change();\n      } else {\n        $('#' + field + '_address_2').val(data.neighborhood).change();\n      } // City.\n\n\n      $('#' + field + '_city').val(data.city).change(); // State.\n\n      $('#' + field + '_state option:selected').attr('selected', false).change();\n      $('#' + field + '_state option[value=\"' + data.state + '\"]').attr('selected', 'selected').change();\n      $('#' + field + '_state').trigger('liszt:updated').trigger('chosen:updated'); // Chosen support.\n      // Storms added this!\n\n      $('#' + field + '_state').val(data.state).trigger('change'); // Select2 support\n    }\n  };\n  WCCorreiosAutofillAddress.init();\n});"]}