{"version":3,"sources":["storms-cookie-consent.min.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","len","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","isArray","cookieConsentCookieStorage","getItem","item","document","cookie","split","map","reduce","acc","_ref","_ref2","trim","setItem","location","protocol","concat","cookieConsentStorageType","cookieConsentPropertyName","shouldShowCookieConsentPopup","saveCookieConsentToStorage","window","addEventListener","storms_cookie_consent_vars","consentPopup","getElementById","modal_id","accept_btn_id","event","classList","add","preventDefault","setTimeout","remove"],"mappings":"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","file":"../storms-cookie-consent.min.js","sourcesContent":["\"use strict\";\n/* global storms_cookie_consent_vars */\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar cookieConsentCookieStorage = {\n  getItem: function getItem(item) {\n    var cookies = document.cookie.split(';').map(function (cookie) {\n      return cookie.split('=');\n    }).reduce(function (acc, _ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return _objectSpread({}, acc, _defineProperty({}, key.trim(), value));\n    }, {});\n    return cookies[item];\n  },\n  setItem: function setItem(item, value) {\n    if (location.protocol !== 'https:') {\n      document.cookie = \"\".concat(item, \"=\").concat(value, \";path=/;SameSite=Strict;\");\n    }\n\n    document.cookie = \"\".concat(item, \"=\").concat(value, \";path=/;SameSite=Strict;Secure;\");\n  }\n};\nvar cookieConsentStorageType = cookieConsentCookieStorage;\nvar cookieConsentPropertyName = 'storms_cookie_consent_accepted';\n\nvar shouldShowCookieConsentPopup = function shouldShowCookieConsentPopup() {\n  return !cookieConsentStorageType.getItem(cookieConsentPropertyName);\n};\n\nvar saveCookieConsentToStorage = function saveCookieConsentToStorage() {\n  return cookieConsentStorageType.setItem(cookieConsentPropertyName, true);\n};\n\nwindow.addEventListener('DOMContentLoaded', function () {\n  // storms_cookie_consent_vars is required to continue, ensure the object exists\n  if (typeof storms_cookie_consent_vars === 'undefined') {\n    return false;\n  }\n\n  var acceptFn = function acceptFn(event) {\n    saveCookieConsentToStorage(cookieConsentStorageType);\n    consentPopup.classList.add('hidden');\n    event.preventDefault();\n  };\n\n  var consentPopup = document.getElementById(storms_cookie_consent_vars.modal_id);\n  var acceptBtn = document.getElementById(storms_cookie_consent_vars.accept_btn_id);\n  acceptBtn.addEventListener('click', acceptFn);\n\n  if (shouldShowCookieConsentPopup(cookieConsentStorageType)) {\n    setTimeout(function () {\n      consentPopup.classList.remove('hidden');\n    }, 2000);\n  }\n});"]}